class Highlights{constructor(){this.observerOptions={root:null,threshold:1},this.observer=new IntersectionObserver(this.observerCallback,this.observerOptions),this.scrollContainer=document.querySelector(".highlight-scroll-container"),this.scrollContainer.childNodes.forEach(t=>{Highlights.#a(t),this.displayPanel(t.querySelector(".story")),this.addAnimation(t),this.addTargetToObserver(t),this.addNodeControls(t)}),this.loader=document.querySelector(".highlight-loader")}static windowSize=window.innerWidth;static animationList=[];static interactionThreshold=200;static currentIndex=0;static eventStartTime;static coordsX;static currentNodeInView;addNodeToList(t){null!=t&&(Highlights.#a(t),this.displayPanel(t.querySelector(".story")),this.addAnimation(t),this.addTargetToObserver(t),this.addNodeControls(t),this.scrollContainer.append(t))}addNodeControls(t){Highlights.windowSize>1024?(t.addEventListener("mousedown",e=>{Highlights.currentNodeInView.node==t&&Highlights.setEvent(e,Highlights.currentNodeInView.animations)}),t.addEventListener("mouseup",()=>{Highlights.currentNodeInView.node==t&&(console.log(Highlights.currentNodeInView),Highlights.setupContainerControls(Highlights.currentNodeInView.node,Highlights.currentNodeInView.animations,Highlights.currentNodeInView.panels))})):(t.addEventListener("touchstart",e=>{Highlights.currentNodeInView.node==t&&Highlights.setEvent(e,Highlights.currentNodeInView.animations)}),t.addEventListener("touchend",()=>{Highlights.currentNodeInView.node==t&&(console.log(Highlights.currentNodeInView),Highlights.setupContainerControls(Highlights.currentNodeInView.node,Highlights.currentNodeInView.animations,Highlights.currentNodeInView.panels))}))}displayPanel(t){t.style.opacity=1,t.style.zIndex=2}hidePanel(t){t.style.opacity=0,t.style.zIndex=0}static setEvent(t,e){let i=t.target.getBoundingClientRect();this.eventStartTime=Date.now(),Highlights.coordsX=t.clientX-i.left,e[Highlights.currentIndex].pause()}static setupContainerControls(t,e,i){let n=Date.now()-this.eventStartTime,s=Math.ceil(.2*t.getBoundingClientRect().width);n<Highlights.interactionThreshold&&(Highlights.coordsX<s?Highlights.currentIndex>0&&(e[Highlights.currentIndex].cancel(),e[Highlights.currentIndex-1].play(),i[Highlights.currentIndex].style.zIndex=0,i[Highlights.currentIndex].style.opacity=0,i[Highlights.currentIndex-1].style.zIndex=2,i[Highlights.currentIndex-1].style.opacity=1,Highlights.currentIndex=Highlights.currentIndex-1):Highlights.currentIndex!=e.length-1&&(e[Highlights.currentIndex].finish(),e[Highlights.currentIndex+1].play(),i[Highlights.currentIndex].style.zIndex=0,i[Highlights.currentIndex].style.opacity=0,i[Highlights.currentIndex+1].style.zIndex=2,i[Highlights.currentIndex+1].style.opacity=1,Highlights.currentIndex=Highlights.currentIndex+1)),e[Highlights.currentIndex].play()}static setCurrentNode(t){Highlights.currentNodeInView=t}observerCallback(t){let e=document.querySelector(".highlight-scroll-container"),i=document.querySelector(".highlight-scroll-container").children.length;t.forEach((t,n)=>{let s=Highlights.animationList.find(e=>e.node==t.target);(Highlights.currentIndex=0,s.animations.map((t,e)=>{t.cancel(),t.pause()}),t.isIntersecting)?(i>1&&[...e.children].indexOf(t.target)==i-1&&$("#highlight-next").length>0&&($("#highlight-next")[0].getAttribute("style")||$("#highlight-next")[0].click(),t.target.scrollIntoView()),s.animations.map((t,e)=>{e<1&&t.play(),e<s.animations.length-1&&(t.onfinish=function(){s.animations[e+1].play(),s.panels[e+1].style.zIndex=2,s.panels[e+1].style.opacity=1,Highlights.currentIndex=e+1})}),Highlights.setCurrentNode(s)):(s.panels[Highlights.currentIndex].style.zIndex=2,s.panels[Highlights.currentIndex].style.opacity=1,s.animations.map((t,e)=>{t.cancel(),t.pause(),e>0&&(s.panels[e].style.zIndex=0,s.panels[e].style.opacity=0),t.onfinish=function(){}}),$(".highlight-controls-container").removeClass("active-vertical"),$(".highlight-controls-container").children(".social-icon").css("display","none"),$(".highlight-controls-container").children(".display-icon").css("display","flex"))})}addTargetToObserver(t){this.observer.observe(t)}addAnimation(t){let e=[{width:"0%"},{width:"100%"}],i=t.querySelectorAll(".highlights-progress"),n=t.querySelectorAll(".story"),s={node:t,animations:[],panels:n};i.forEach((t,i)=>{s.animations.push(t.animate(e,{duration:3e3,fill:"forwards"}))}),Highlights.animationList.push(s)}static #a(t){let e=t.querySelector(".stories-bar-wrap"),i;t.querySelectorAll(".story").forEach(t=>{i=document.querySelector(".highlights-bar").cloneNode(!0),e.append(i)})}}let highlights=new Highlights;window.fsAttributes=window.fsAttributes||[],window.fsAttributes.push(["cmsload",t=>{let[e]=t;highlights.loader.querySelectorAll(".highlight-list-item > .story-container").forEach(t=>{highlights.addNodeToList(t)}),e.on("renderitems",t=>{t.map(t=>{highlights.addNodeToList(t.element.querySelector(".story-container"))})})},]);
